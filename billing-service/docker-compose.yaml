version: '3.8'

services:
  database:
    image: postgres:15.2
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: stosik
      POSTGRES_PASSWORD: billing
      POSTGRES_DB: billing
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "stosik", "-d", "billing" ]
      interval: 10s
      timeout: 5s
      retries: 5
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  billing:
    build:
      context: .
    environment:
      DATABASE_URL: jdbc:postgresql://database:5432/billing
      DATABASE_USERNAME: stosik
      DATABASE_PASSWORD: billing
      KAFKA_URL: broker:29092
    depends_on:
      - database
      - broker
    ports:
      - "8080:8080"
volumes:
  postgres-data:
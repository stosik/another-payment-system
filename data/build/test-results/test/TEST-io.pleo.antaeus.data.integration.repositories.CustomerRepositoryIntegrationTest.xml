<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="io.pleo.antaeus.data.integration.repositories.CustomerRepositoryIntegrationTest" tests="3" skipped="0" failures="0" errors="0" timestamp="2023-12-26T22:35:51" hostname="Szymons-MBP.technicolor.net" time="0.194">
  <properties/>
  <testcase name="should fetch all customers()" classname="io.pleo.antaeus.data.integration.repositories.CustomerRepositoryIntegrationTest" time="0.091"/>
  <testcase name="should add a customer()" classname="io.pleo.antaeus.data.integration.repositories.CustomerRepositoryIntegrationTest" time="0.028"/>
  <testcase name="should fetch a customer by id()" classname="io.pleo.antaeus.data.integration.repositories.CustomerRepositoryIntegrationTest" time="0.03"/>
  <system-out><![CDATA[SQL: DROP TABLE IF EXISTS joblock
SQL: DROP TABLE IF EXISTS invoice
SQL: DROP TABLE IF EXISTS customer
SQL: CREATE TABLE IF NOT EXISTS customer (id SERIAL, currency VARCHAR(3) NOT NULL, CONSTRAINT pk_customer_id PRIMARY KEY (id))
SQL: CREATE TABLE IF NOT EXISTS invoice (id SERIAL, currency VARCHAR(3) NOT NULL, "value" DECIMAL(1000, 2) NOT NULL, customer_id INT NOT NULL, status TEXT NOT NULL, CONSTRAINT pk_invoice_id PRIMARY KEY (id), CONSTRAINT fk_invoice_customer_id__id FOREIGN KEY (customer_id) REFERENCES customer(id) ON DELETE RESTRICT ON UPDATE RESTRICT)
SQL: CREATE INDEX idx_invoice_status ON invoice (status)
SQL: CREATE TABLE IF NOT EXISTS joblock (id SERIAL, "name" VARCHAR(128) NOT NULL, "locked" BOOLEAN NOT NULL, CONSTRAINT pk_job_lock_id PRIMARY KEY (id))
SQL: ALTER TABLE joblock ADD CONSTRAINT joblock_name_unique UNIQUE ("name")
SQL: DROP TABLE IF EXISTS joblock
SQL: DROP TABLE IF EXISTS invoice
SQL: DROP TABLE IF EXISTS customer
SQL: CREATE TABLE IF NOT EXISTS customer (id SERIAL, currency VARCHAR(3) NOT NULL, CONSTRAINT pk_customer_id PRIMARY KEY (id))
SQL: CREATE TABLE IF NOT EXISTS invoice (id SERIAL, currency VARCHAR(3) NOT NULL, "value" DECIMAL(1000, 2) NOT NULL, customer_id INT NOT NULL, status TEXT NOT NULL, CONSTRAINT pk_invoice_id PRIMARY KEY (id), CONSTRAINT fk_invoice_customer_id__id FOREIGN KEY (customer_id) REFERENCES customer(id) ON DELETE RESTRICT ON UPDATE RESTRICT)
SQL: CREATE INDEX idx_invoice_status ON invoice (status)
SQL: CREATE TABLE IF NOT EXISTS joblock (id SERIAL, "name" VARCHAR(128) NOT NULL, "locked" BOOLEAN NOT NULL, CONSTRAINT pk_job_lock_id PRIMARY KEY (id))
SQL: ALTER TABLE joblock ADD CONSTRAINT joblock_name_unique UNIQUE ("name")
SQL: DROP TABLE IF EXISTS joblock
SQL: DROP TABLE IF EXISTS invoice
SQL: DROP TABLE IF EXISTS customer
SQL: CREATE TABLE IF NOT EXISTS customer (id SERIAL, currency VARCHAR(3) NOT NULL, CONSTRAINT pk_customer_id PRIMARY KEY (id))
SQL: CREATE TABLE IF NOT EXISTS invoice (id SERIAL, currency VARCHAR(3) NOT NULL, "value" DECIMAL(1000, 2) NOT NULL, customer_id INT NOT NULL, status TEXT NOT NULL, CONSTRAINT pk_invoice_id PRIMARY KEY (id), CONSTRAINT fk_invoice_customer_id__id FOREIGN KEY (customer_id) REFERENCES customer(id) ON DELETE RESTRICT ON UPDATE RESTRICT)
SQL: CREATE INDEX idx_invoice_status ON invoice (status)
SQL: CREATE TABLE IF NOT EXISTS joblock (id SERIAL, "name" VARCHAR(128) NOT NULL, "locked" BOOLEAN NOT NULL, CONSTRAINT pk_job_lock_id PRIMARY KEY (id))
SQL: ALTER TABLE joblock ADD CONSTRAINT joblock_name_unique UNIQUE ("name")
]]></system-out>
  <system-err><![CDATA[[Test worker] INFO org.testcontainers.images.PullPolicy - Image pull policy will be performed by: DefaultPullPolicy()
[Test worker] INFO org.testcontainers.utility.ImageNameSubstitutor - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
[Test worker] INFO org.testcontainers.dockerclient.DockerClientProviderStrategy - Loaded org.testcontainers.dockerclient.UnixSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
[Test worker] INFO org.testcontainers.dockerclient.DockerClientProviderStrategy - Found Docker environment with local Unix socket (unix:///var/run/docker.sock)
[Test worker] INFO org.testcontainers.DockerClientFactory - Docker host IP address is localhost
[Test worker] INFO org.testcontainers.DockerClientFactory - Connected to docker: 
  Server Version: 24.0.6
  API Version: 1.43
  Operating System: Docker Desktop
  Total Memory: 7844 MB
[Test worker] INFO tc.testcontainers/ryuk:0.5.1 - Creating container for image: testcontainers/ryuk:0.5.1
[Test worker] INFO tc.testcontainers/ryuk:0.5.1 - Container testcontainers/ryuk:0.5.1 is starting: 3df78a546769cbdce074cefeb25860557b3b8f0fc864a89565dda3195efa5dc4
[Test worker] INFO tc.testcontainers/ryuk:0.5.1 - Container testcontainers/ryuk:0.5.1 started in PT0.351072S
[Test worker] INFO org.testcontainers.utility.RyukResourceReaper - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
[Test worker] INFO org.testcontainers.DockerClientFactory - Checking the system...
[Test worker] INFO org.testcontainers.DockerClientFactory - ✔︎ Docker server version should be at least 1.6.0
[Test worker] INFO tc.postgres:15.2 - Creating container for image: postgres:15.2
[Test worker] INFO tc.postgres:15.2 - Container postgres:15.2 is starting: 9e61398cf10ebc1e366a5a8df2329520a93ea379e58cf3aa5ef71bae34347d56
[Test worker] INFO tc.postgres:15.2 - Container postgres:15.2 started in PT1.10462S
[Test worker] INFO tc.postgres:15.2 - Container is started (JDBC URL: jdbc:postgresql://localhost:54241/test?loggerLevel=OFF)
[Test worker] INFO com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
[Test worker] INFO com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@609e57da
[Test worker] INFO com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
[Test worker] WARN Exposed - Keyword identifier used: 'value'. Case sensitivity may not be kept when quoted by default: 'value'. To keep case sensitivity, opt-in and set 'preserveKeywordCasing' to true in DatabaseConfig block.
[Test worker] WARN Exposed - Keyword identifier used: 'name'. Case sensitivity may not be kept when quoted by default: 'name'. To keep case sensitivity, opt-in and set 'preserveKeywordCasing' to true in DatabaseConfig block.
[Test worker] WARN Exposed - Keyword identifier used: 'locked'. Case sensitivity may not be kept when quoted by default: 'locked'. To keep case sensitivity, opt-in and set 'preserveKeywordCasing' to true in DatabaseConfig block.
[Test worker] INFO com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
[Test worker] INFO com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@5974b7e8
[Test worker] INFO com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
[Test worker] WARN Exposed - Keyword identifier used: 'value'. Case sensitivity may not be kept when quoted by default: 'value'. To keep case sensitivity, opt-in and set 'preserveKeywordCasing' to true in DatabaseConfig block.
[Test worker] WARN Exposed - Keyword identifier used: 'name'. Case sensitivity may not be kept when quoted by default: 'name'. To keep case sensitivity, opt-in and set 'preserveKeywordCasing' to true in DatabaseConfig block.
[Test worker] WARN Exposed - Keyword identifier used: 'locked'. Case sensitivity may not be kept when quoted by default: 'locked'. To keep case sensitivity, opt-in and set 'preserveKeywordCasing' to true in DatabaseConfig block.
[Test worker] INFO com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
[Test worker] INFO com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection org.postgresql.jdbc.PgConnection@e700eba
[Test worker] INFO com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
[Test worker] WARN Exposed - Keyword identifier used: 'value'. Case sensitivity may not be kept when quoted by default: 'value'. To keep case sensitivity, opt-in and set 'preserveKeywordCasing' to true in DatabaseConfig block.
[Test worker] WARN Exposed - Keyword identifier used: 'name'. Case sensitivity may not be kept when quoted by default: 'name'. To keep case sensitivity, opt-in and set 'preserveKeywordCasing' to true in DatabaseConfig block.
[Test worker] WARN Exposed - Keyword identifier used: 'locked'. Case sensitivity may not be kept when quoted by default: 'locked'. To keep case sensitivity, opt-in and set 'preserveKeywordCasing' to true in DatabaseConfig block.
]]></system-err>
</testsuite>
